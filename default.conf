server {
    listen 80;
    server_name ubuntu.yamahost.shop;

    location / {
        return 403; # Forbidden
    }
}

server {
    listen 80;
    server_name tripgago.yamahost.shop;

    location / {
        proxy_pass http://client:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# swarm.yamahost.shop 도메인 요청을 처리하는 서버 블록
server {
    listen 80;
    server_name swarm.yamahost.shop;

    location / {
        proxy_pass http://app:8080; 
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
# portainer.yamahost.shop 요청
server {
  listen 80; # 80포트로 받을 때
  server_name portainer.yamahost.shop; # 도메인주소
  return 301 https://portainer.yamahost.shop$request_uri;
}

server {
  listen 443 ssl http2;
  server_name portainer.yamahost.shop;

  ssl_certificate /etc/letsencrypt/live/portainer.yamahost.shop/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/portainer.yamahost.shop/privkey.pem;
  
  location / { # location 이후 특정 url을 처리하는 방법을 정의(여기서는 / -> 즉, 모든 request)
    proxy_pass https://portainer:9443; # Request에 대해 어디로 리다이렉트하는지 작성. 9443 
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
server {
    if ($host = portainer.yamahost.shop) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

  listen 80;
  server_name portainer.yamahost.shop;
    return 404; # managed by Certbot
}
