server {
    listen 80;
    server_name ubuntu.yamahost.shop;

    location / {
        return 403; # Forbidden
    }
}

server {
    listen 80;
    server_name tripgago.yamahost.shop;

    location / {
        proxy_pass http://client:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# swarm.yamahost.shop 도메인 요청을 처리하는 서버 블록
server {
    listen 80;
    server_name swarm.yamahost.shop;

    location / {
        proxy_pass http://app:8080; 
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# https 설정
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;

    # 443 포트로 접근시 ssl을 적용한 뒤 9443포트로 요청을 전달해주도록 하는 설정.
    server {
            server_name portainer.yamahost.shop;

            location / {
                    proxy_pass http://172.17.0.2:9443;
            }

            listen 443 ssl; # managed by Certbot
            ssl_certificate /etc/letsencrypt/live/portainer.yamahost.shop/fullchain.pem; # managed by Cert>
            ssl_certificate_key /etc/letsencrypt/live/portainer.yamahost.shop/privkey.pem; # managed by Ce>

            include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
            ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    }

# portainer.yamahost.shop 도메인 요청을 처리하는 서버 블록
 server {
             return 301 https://$host$request_uri;
             # managed by Certbot


            listen 80;
            server_name portainer.yamahost.shop;
            return 404; # managed by Certbot
    }

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
}
